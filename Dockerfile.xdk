ARG BASE_IMAGE
FROM $BASE_IMAGE as xdkbuild

ARG GRADLE_HOME=/home/gradle
ENV GRADLE_HOME=$GRADLE_HOME

#
# Set the "enable exe builds" environment flag to true (hard coded).
# Of course we could pass it to the Gradle process, or echo it to a properties file
# in the container, but this is the "build everything on any platform" docker container,
# so it correctly reflects the use case. We probably never want it as default, since
# absolutely no one wants to install the suspicious NSIS bits in any other environment.
#
ARG ORG_XTCLANG_INSTALL_DIST_EXE=true
ENV ORG_XTCLANG_INSTALL_DIST_EXE=$ORG_XTCLANG_INSTALL_DIST_EXE

#
# Install nsis mystery bundle
#
RUN apt-get update && apt-get install --no-install-recommends -y nsis
COPY libs/nsis-linux-x86_64.tar.gz .
RUN tar xvfz nsis-linux-x86_64.tar.gz -C /usr/share/ | tee $GRADLE_HOME/nsis.install.log
COPY scripts/* /usr/local/bin
RUN find /usr/share/nsis | tee $GRADLE_HOME/nsis.install.plugin.log

# Copy the build script
COPY scripts/*.sh /usr/local/bin

#
# Check out requested branch, update if stale or changed.
#
# The ADD updates GitHub version contents to a local file. As we do the Gradle build
# during the docker build stage, and no the run stage, this will implement a layer whose
# hash is invalidated if the checked out branch has changed from the last build. The
# Gradle build script, of course, can't know that at the build stage. 
#

USER gradle
ARG GITHUB_BRANCH
ENV GITHUB_BRANCH=$GITHUB_BRANCH
ADD https://api.github.com/repos/xtclang/xvm/git/refs/heads/$GITHUB_BRANCH version.json
RUN git clone --branch $GITHUB_BRANCH --depth=1 https://github.com/xtclang/xvm xvm
ENTRYPOINT ["gradlew-build.sh", "install"]
CMD ["/bin/bash"]
